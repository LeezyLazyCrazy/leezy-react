{
  "env": {
    "browser": true,
    "es2021": true
  },
  "settings": {
    "react": {
      "version": "detect",
      "import/resolver": {
        "typescript": {}
      }
    },
    "import/resolver": {
      "node": {
        "extensions": [".js", ".jsx", ".ts", ".tsx", ".d.ts"]
      }
    }
  },
  "extends": [
    "eslint:recommended",
    "plugin:react/recommended", // eslint-plugin-react의 추천 규칙 사용
    "plugin:@typescript-eslint/recommended", // ESLint가 TypeScript를 지원할 수 있도록 하는 모든 도구를 위한 Monorepo
    "plugin:prettier/recommended" // prettier 규칙을 적용하여 틀릴 경우 eslint 문제로 처리
    // "airbnb", //airbnb의 규칙 사용
    // "airbnb/hooks" //React hooks를 위한  airbnb 규칙 사용
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": "latest",
    "sourceType": "module"
  },
  "plugins": ["react", "@typescript-eslint", "react-hooks", "prettier"],
  "rules": {
    "import/prefer-default-export": "off",
    "react/react-in-jsx-scope": "off",
    "react/require-default-props": 0,
    "react/prop-types": 0,
    "object-curly-newline": 0,
    "react/function-component-definition": "off",
    "react/jsx-uses-react": "off",
    "no-console": ["off"],
    "no-unused-vars": "off", //사용안한 변수 경고 중복
    "no-use-before-define": "off", // 정의 전에 사용 금지
    "arrow-body-style": "off", //화살표 함수 안에 return을 사용 할 수 있다.
    "prefer-arrow-callback": "off",
    "operator-linebreak": "off", //연산자 다음 줄 바꿈을 사용 할 수 있다.
    "prettier/prettier": "off",
    "react/jsx-filename-extension": ["error", { "extensions": [".ts", ".tsx", ".jsx"] }],
    "import/extensions": [
      "off",
      "ignorePackages",
      {
        "js": "never",
        "jsx": "never",
        "ts": "never",
        "tsx": "never",
        "json": "never",
        "d.ts": "never"
      } //import 시 확장자명은 사용하지 않는다.
    ],
    "@typescript-eslint/quotes": [
      "error",
      "single",
      {
        "avoidEscape": true,
        "allowTemplateLiterals": true
      }
    ],
    "@typescript-eslint/no-use-before-define": "off",
    "@typescript-eslint/no-unused-vars": ["error"],
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/no-non-null-assertion": "off",
    "@typescript-eslint/ban-types": "off"
  }
}
